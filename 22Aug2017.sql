DROP SEQUENCE cl_absent_parent_absent_parent_id_seq;
CREATE SEQUENCE cl_absent_parent_absent_parent_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_absent_parent_court_order_absent_parent_court_order_id_seq;
CREATE SEQUENCE cl_absent_parent_court_order_absent_parent_court_order_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_absent_parent_demographic_absent_parent_demographic_id_seq;
CREATE SEQUENCE cl_absent_parent_demographic_absent_parent_demographic_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_absent_parent_employment_absent_parent_employment_id_seq;
CREATE SEQUENCE cl_absent_parent_employment_absent_parent_employment_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_absent_parent_mva_absent_parent_mva_id_seq;
CREATE SEQUENCE cl_absent_parent_mva_absent_parent_mva_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_community_service_community_service_id_seq;
CREATE SEQUENCE cl_community_service_community_service_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_demographic_attribute_demographic_attribute_id_seq;
CREATE SEQUENCE cl_demographic_attribute_demographic_attribute_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_deprivation_deprivation_id_seq;
CREATE SEQUENCE cl_deprivation_deprivation_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_disability_disability_id_seq;
CREATE SEQUENCE cl_disability_disability_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_earned_income_earned_income_id_seq;
CREATE SEQUENCE cl_earned_income_earned_income_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_educational_qualification_educational_qualification_id_seq;
CREATE SEQUENCE cl_educational_qualification_educational_qualification_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_employer_employer_id_seq;
CREATE SEQUENCE cl_employer_employer_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_fa_grant_fa_grant_id_seq;
CREATE SEQUENCE cl_fa_grant_fa_grant_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_individual_individual_id_seq;
CREATE SEQUENCE cl_individual_individual_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_institute_institute_id_seq;
CREATE SEQUENCE cl_institute_institute_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_insurance_asset_insurance_asset_id_seq;
CREATE SEQUENCE cl_insurance_asset_insurance_asset_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_liquid_asset_liquid_asset_id_seq;
CREATE SEQUENCE cl_liquid_asset_liquid_asset_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_living_arrangement_living_arrangement_id_seq;
CREATE SEQUENCE cl_living_arrangement_living_arrangement_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_managed_care_managed_care_id_seq;
CREATE SEQUENCE cl_managed_care_managed_care_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_medical_expense_medical_expense_id_seq;
CREATE SEQUENCE cl_medical_expense_medical_expense_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_medicare_denial_medicare_denial_id_seq;
CREATE SEQUENCE cl_medicare_denial_medicare_denial_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_name_name_id_seq;
CREATE SEQUENCE cl_name_name_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_other_agency_benefits_other_agency_benefits_id_seq;
CREATE SEQUENCE cl_other_agency_benefits_other_agency_benefits_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_other_asset_other_asset_id_seq;
CREATE SEQUENCE cl_other_asset_other_asset_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_policy_policy_id_seq;
CREATE SEQUENCE cl_policy_policy_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_pregnancy_pregnancy_id_seq;
CREATE SEQUENCE cl_pregnancy_pregnancy_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_real_estate_asset_real_estate_asset_id_seq;
CREATE SEQUENCE cl_real_estate_asset_real_estate_asset_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_shelter_deduction_shelter_deduction_id_seq;
CREATE SEQUENCE cl_shelter_deduction_shelter_deduction_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_shelter_expense_shelter_expense_id_seq;
CREATE SEQUENCE cl_shelter_expense_shelter_expense_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_ssn_ssn_id_seq;
CREATE SEQUENCE cl_ssn_ssn_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_transfer_asset_transfer_asset_id_seq;
CREATE SEQUENCE cl_transfer_asset_transfer_asset_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_unearned_income_amount_unearned_income_amount_id_seq;
CREATE SEQUENCE cl_unearned_income_amount_unearned_income_amount_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_unearned_income_expense_unearned_income_expense_id_seq;
CREATE SEQUENCE cl_unearned_income_expense_unearned_income_expense_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_unearned_income_inc_amount_unearned_income_inc_amount_id_seq;
CREATE SEQUENCE cl_unearned_income_inc_amount_unearned_income_inc_amount_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_unearned_income_inc_unearned_income_inc_id_seq;
CREATE SEQUENCE cl_unearned_income_inc_unearned_income_inc_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_vehicular_asset_vehicular_asset_id_seq;
CREATE SEQUENCE cl_vehicular_asset_vehicular_asset_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_welfare_reform_welfare_reform_id_seq;
CREATE SEQUENCE cl_welfare_reform_welfare_reform_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_work_expense_work_expense_id_seq;
CREATE SEQUENCE cl_work_expense_work_expense_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_work_income_work_income_id_seq;
CREATE SEQUENCE cl_work_income_work_income_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cl_work_work_id_seq;
CREATE SEQUENCE cl_work_work_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cs_auth_rep_auth_rep_id_seq;
CREATE SEQUENCE cs_auth_rep_auth_rep_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cs_benefits_case_benefits_case_id_seq;
CREATE SEQUENCE cs_benefits_case_benefits_case_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cs_individual_membership_individual_membership_id_seq;
CREATE SEQUENCE cs_individual_membership_individual_membership_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cs_program_eligibility_program_eligibility_id_seq;
CREATE SEQUENCE cs_program_eligibility_program_eligibility_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cs_program_program_eligibility_id_seq;
CREATE SEQUENCE cs_program_program_eligibility_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cs_scr_absent_parent_scr_absent_parent_id_seq;
CREATE SEQUENCE cs_scr_absent_parent_scr_absent_parent_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cs_scr_circumstance_scr_circumstance_id_seq;
CREATE SEQUENCE cs_scr_circumstance_scr_circumstance_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cs_scr_financial_info_scr_financial_info_id_seq;
CREATE SEQUENCE cs_scr_financial_info_scr_financial_info_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE cs_worker_assignment_worker_assignment_id_seq;
CREATE SEQUENCE cs_worker_assignment_worker_assignment_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE t_address_address_id_seq;
CREATE SEQUENCE t_address_address_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE t_case_address_case_address_id_seq;
CREATE SEQUENCE t_case_address_case_address_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE t_case_contact_info_case_contact_info_id_seq;
CREATE SEQUENCE t_case_contact_info_case_contact_info_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE t_contact_info_contact_info_id_seq;
CREATE SEQUENCE t_contact_info_contact_info_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE t_individual_address_individual_address_id_seq;
CREATE SEQUENCE t_individual_address_individual_address_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE t_individual_contact_info_individual_contact_info_id_seq;
CREATE SEQUENCE t_individual_contact_info_individual_contact_info_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP SEQUENCE t_individual_relationship_individual_relationship_id_seq;
CREATE SEQUENCE t_individual_relationship_individual_relationship_id_seq INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1  NO CYCLE;
DROP TABLE cl_absent_parent;
CREATE TABLE cl_absent_parent (absent_parent_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, type_cd CHARACTER VARYING(1) NOT NULL, last_name CHARACTER VARYING(20) NOT NULL, middle_name CHARACTER VARYING(12) NOT NULL, first_name CHARACTER VARYING(15) NOT NULL, suffix_name CHARACTER VARYING(4) NOT NULL, maiden_name CHARACTER VARYING(20) NOT NULL, street_1_address CHARACTER VARYING(22) NOT NULL, street_2_address CHARACTER VARYING(22) NOT NULL, city CHARACTER VARYING(22) NOT NULL, state CHARACTER VARYING(2) NOT NULL, zipcode NUMERIC(9,0) NOT NULL, telephone_areacode NUMERIC(3,0) NOT NULL, telephone_number NUMERIC(7,0) NOT NULL, delete_ind CHARACTER VARYING(1) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (absent_parent_id));
COMMENT ON COLUMN cl_absent_parent.absent_parent_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_absent_parent.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_absent_parent.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_absent_parent.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_absent_parent.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_absent_parent.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_absent_parent.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_absent_parent.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_absent_parent_court_order;
CREATE TABLE cl_absent_parent_court_order (absent_parent_court_order_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, absent_parent_id NUMERIC(12,0) NOT NULL, payment_amount NUMERIC(9,0) NOT NULL, payment_frequency_cd CHARACTER VARYING(2) NOT NULL, docket_number CHARACTER VARYING(20) NOT NULL, delete_ind CHARACTER VARYING(1) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (absent_parent_court_order_id));
COMMENT ON COLUMN cl_absent_parent_court_order.absent_parent_court_order_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_absent_parent_court_order.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_absent_parent_court_order.absent_parent_id IS 'Absent Parent ID';
COMMENT ON COLUMN cl_absent_parent_court_order.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_absent_parent_court_order.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_absent_parent_court_order.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_absent_parent_court_order.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_absent_parent_court_order.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_absent_parent_court_order.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_absent_parent_demographic;
CREATE TABLE cl_absent_parent_demographic (absent_parent_demographic_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, absent_parent_id NUMERIC(12,0) NOT NULL, au_hoh_relationship_cd CHARACTER VARYING(2) NOT NULL, sex_cd CHARACTER VARYING(1) NOT NULL, race_cd CHARACTER VARYING(1) NOT NULL, marital_status_cd CHARACTER VARYING(1) NOT NULL, hair_color_cd CHARACTER VARYING(1) NOT NULL, eye_color_cd CHARACTER VARYING(1) NOT NULL, weight NUMERIC(3,0) NOT NULL, height_feet_number NUMERIC(2,0) NOT NULL, height_inches_number NUMERIC(2,0) NOT NULL, vet_status_cd CHARACTER VARYING(1) NOT NULL, vet_id_number CHARACTER VARYING(10) NOT NULL, vet_branch_cd CHARACTER VARYING(1) NOT NULL, approx_age NUMERIC(2,0) NOT NULL, date_of_birth DATE NOT NULL, birth_city CHARACTER VARYING(22) NOT NULL, birth_state CHARACTER VARYING(2) NOT NULL, marriage_status_cd CHARACTER VARYING(1) NOT NULL, marriage_dt DATE NOT NULL, marriage_city CHARACTER VARYING(22) NOT NULL, marriage_state CHARACTER VARYING(2) NOT NULL, incarceration_current_ind CHARACTER VARYING(1) NOT NULL, incarceration_institute_name CHARACTER VARYING(33) NOT NULL, incarceration_previous_ind CHARACTER VARYING(1) NOT NULL, military_from_dt DATE NOT NULL, military_to_dt DATE NOT NULL, allot_pay_ind CHARACTER VARYING(1) NOT NULL, allot_recpt_cd CHARACTER VARYING(2) NOT NULL, union_local_name CHARACTER VARYING(33) NOT NULL, tpl_ind CHARACTER VARYING(1) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (absent_parent_demographic_id));
COMMENT ON COLUMN cl_absent_parent_demographic.absent_parent_demographic_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_absent_parent_demographic.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_absent_parent_demographic.absent_parent_id IS 'Absent Parent ID';
COMMENT ON COLUMN cl_absent_parent_demographic.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_absent_parent_demographic.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_absent_parent_demographic.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_absent_parent_demographic.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_absent_parent_demographic.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_absent_parent_demographic.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_absent_parent_employment;
CREATE TABLE cl_absent_parent_employment (absent_parent_employment_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, absent_parent_id NUMERIC(12,0) NOT NULL, employer_type_cd CHARACTER VARYING(2) NOT NULL, employer_name CHARACTER VARYING(33) NOT NULL, occupation_text CHARACTER VARYING(22) NOT NULL, employment_dt DATE NOT NULL, employer_street1_address CHARACTER VARYING(22) NOT NULL, employer_street2_address CHARACTER VARYING(22) NOT NULL, employer_city CHARACTER VARYING(22) NOT NULL, employer_state CHARACTER VARYING(2) NOT NULL, employer_zipcode NUMERIC(9,0) NOT NULL, employer_areacode NUMERIC(3,0) NOT NULL, employer_telephone_number NUMERIC(7,0) NOT NULL, delete_ind CHARACTER VARYING(1) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (absent_parent_employment_id));
COMMENT ON COLUMN cl_absent_parent_employment.absent_parent_employment_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_absent_parent_employment.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_absent_parent_employment.absent_parent_id IS 'Absent Parent ID';
COMMENT ON COLUMN cl_absent_parent_employment.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_absent_parent_employment.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_absent_parent_employment.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_absent_parent_employment.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_absent_parent_employment.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_absent_parent_employment.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_absent_parent_mva;
CREATE TABLE cl_absent_parent_mva (absent_parent_mva_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, absent_parent_id NUMERIC(12,0) NOT NULL, driver_license_state CHARACTER VARYING(2) NOT NULL, plate_state CHARACTER VARYING(2) NOT NULL, plate_number CHARACTER VARYING(7) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (absent_parent_mva_id));
COMMENT ON COLUMN cl_absent_parent_mva.absent_parent_mva_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_absent_parent_mva.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_absent_parent_mva.absent_parent_id IS 'Absent Parent ID';
COMMENT ON COLUMN cl_absent_parent_mva.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_absent_parent_mva.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_absent_parent_mva.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_absent_parent_mva.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_absent_parent_mva.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_absent_parent_mva.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_community_service;
CREATE TABLE cl_community_service (community_service_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, average_hours_week NUMERIC(2,0) NOT NULL, average_hours_ver_cd CHARACTER VARYING(2) NOT NULL, average_hours_ver_dt NUMERIC(9,0) NOT NULL, service_type_1 CHARACTER VARYING(2) NOT NULL, service_type_2 CHARACTER VARYING(2) NOT NULL, service_type_3 CHARACTER VARYING(2) NOT NULL, service_type_4 CHARACTER VARYING(2) NOT NULL, non_part_reason_cd CHARACTER VARYING(2) NOT NULL, non_part_ver_cd CHARACTER VARYING(2) NOT NULL, non_part_ver_dt NUMERIC(9,0) NOT NULL, plan_volume_ind CHARACTER VARYING(1) NOT NULL, contact_last_name CHARACTER VARYING(20) NOT NULL, contact_middle_name CHARACTER VARYING(12) NOT NULL, contact_first_name CHARACTER VARYING(15) NOT NULL, contact_sufix_name CHARACTER VARYING(4) NOT NULL, contact_address_1 CHARACTER VARYING(22) NOT NULL, contact_address_2 CHARACTER VARYING(22) NOT NULL, contact_city CHARACTER VARYING(22) NOT NULL, contact_state CHARACTER VARYING(2) NOT NULL, contact_zipcode NUMERIC(9,0) NOT NULL, contact_areacode NUMERIC(3,0) NOT NULL, contact_tel_number NUMERIC(7,0) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (community_service_id));
COMMENT ON COLUMN cl_community_service.community_service_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_community_service.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_community_service.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_community_service.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_community_service.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_community_service.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_community_service.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_community_service.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_demographic_attribute;
CREATE TABLE cl_demographic_attribute (demographic_attribute_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, gender_cd CHARACTER VARYING(64) NOT NULL, race_cd CHARACTER VARYING(64) NOT NULL, date_of_birth_dt TIMESTAMP(6) WITHOUT TIME ZONE NOT NULL, ssn_ind CHARACTER VARYING(1), ssn_referral CHARACTER VARYING(20), effective_begin_dt DATE NOT NULL, effective_end_dt DATE, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (demographic_attribute_id));
COMMENT ON COLUMN cl_demographic_attribute.demographic_attribute_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_demographic_attribute.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_demographic_attribute.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_demographic_attribute.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_demographic_attribute.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_demographic_attribute.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_demographic_attribute.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_demographic_attribute.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_deprivation;
CREATE TABLE cl_deprivation (deprivation_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, deprivation_type_cd CHARACTER VARYING(32) NOT NULL, deprivation_ver_cd CHARACTER VARYING(32) NOT NULL, deprivation_ver_dt DATE NOT NULL, delete_ind CHARACTER VARYING(1) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt DATE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30));
COMMENT ON COLUMN cl_deprivation.deprivation_id IS 'Auto Generated Primary key of the table';
COMMENT ON COLUMN cl_deprivation.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_deprivation.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_deprivation.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_deprivation.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_deprivation.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_deprivation.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_deprivation.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_disability;
CREATE TABLE cl_disability (disability_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, disability_type_cd CHARACTER VARYING(32) NOT NULL, approval_dt DATE NOT NULL, disability_start_dt DATE NOT NULL, disability_end_dt DATE NOT NULL, delete_ind CHARACTER VARYING(1) NOT NULL, provider_ref CHARACTER VARYING(32) NOT NULL, loan_dt DATE NOT NULL, treatment_part CHARACTER VARYING(32) NOT NULL, treatment_verification CHARACTER VARYING(32) NOT NULL, treatment_verification_dt DATE NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, medical_review CHARACTER VARYING(32) NOT NULL, dalp_type CHARACTER VARYING(32) NOT NULL, iar_dt DATE NOT NULL, approval_src_cd CHARACTER VARYING(32) NOT NULL, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30));
COMMENT ON COLUMN cl_disability.disability_id IS 'Auto Generated Primary key of the table';
COMMENT ON COLUMN cl_disability.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_disability.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_disability.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_disability.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_disability.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_disability.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_disability.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_earned_income;
CREATE TABLE cl_earned_income (earned_income_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, income_type_cd CHARACTER VARYING(2) NOT NULL, income_frequency_cd CHARACTER VARYING(2) NOT NULL, late_report_ind CHARACTER VARYING(1) NOT NULL, boarders_number NUMERIC(2,0) NOT NULL, rented_rooms_number NUMERIC(2,0) NOT NULL, roomers_number NUMERIC(2,0) NOT NULL, two_year_earnings_amount NUMERIC(9,2) NOT NULL, delete_ind CHARACTER VARYING(1) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, record_update_by_mdm_ind CHARACTER VARYING(1) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (earned_income_id));
COMMENT ON COLUMN cl_earned_income.earned_income_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_earned_income.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_earned_income.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_earned_income.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_earned_income.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_earned_income.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_earned_income.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_earned_income.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_educational_qualification;
CREATE TABLE cl_educational_qualification (educational_qualification_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, dpcare_response_cd CHARACTER VARYING(2) NOT NULL, education_level_cd CHARACTER VARYING(2) NOT NULL, expected_graduation_dt DATE NOT NULL, graduation_dt_ver_cd CHARACTER VARYING(2) NOT NULL, highest_grade_completion_cd CHARACTER VARYING(2) NOT NULL, delete_ind CHARACTER VARYING(1) NOT NULL, school_city CHARACTER VARYING(20) NOT NULL, school_line_1_addr CHARACTER VARYING(22) NOT NULL, school_line_2_addr CHARACTER VARYING(22) NOT NULL, school_name CHARACTER VARYING(15) NOT NULL, school_number CHARACTER VARYING(3) NOT NULL, school_state CHARACTER VARYING(2) NOT NULL, school_zipcode NUMERIC(9,0) NOT NULL, student_addr_text CHARACTER VARYING(32) NOT NULL, good_standing CHARACTER VARYING(1) NOT NULL, good_stand_verf CHARACTER VARYING(2) NOT NULL, good_stand_verf_dt DATE NOT NULL, graduation_ver_dt DATE NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (educational_qualification_id));
COMMENT ON COLUMN cl_educational_qualification.educational_qualification_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_educational_qualification.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_educational_qualification.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_educational_qualification.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_educational_qualification.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_educational_qualification.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_educational_qualification.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_educational_qualification.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_employer;
CREATE TABLE cl_employer (employer_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, employment_begin_dt DATE NOT NULL, employer_name CHARACTER VARYING(33) NOT NULL, employer_street_1 CHARACTER VARYING(25) NOT NULL, employer_street_2 CHARACTER VARYING(25) NOT NULL, employer_city CHARACTER VARYING(22) NOT NULL, employer_state CHARACTER VARYING(2) NOT NULL, employer_zipcode NUMERIC(9,0) NOT NULL, employer_federal_id_number NUMERIC(9,0) NOT NULL, earned_income_tax_cr_amount NUMERIC(9,0) NOT NULL, employment_term_dt DATE NOT NULL, employer_areacode NUMERIC(3,0) NOT NULL, employer_telephone_number NUMERIC(7,0) NOT NULL, delete_ind CHARACTER VARYING(1) NOT NULL, comment CHARACTER VARYING(70) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, address_src CHARACTER VARYING(2) NOT NULL, health_ins_available_employer CHARACTER VARYING(1) NOT NULL, ins_available_enter_dt DATE NOT NULL, volquit_ind CHARACTER VARYING(1) NOT NULL, volquit_gd_case_ind CHARACTER VARYING(1) NOT NULL, volquit_wage_amount NUMERIC(9,0) NOT NULL, volquit_mlyhrs_num NUMERIC(3,0) NOT NULL, volquit_dt NUMERIC(9,0) NOT NULL, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (employer_id));
COMMENT ON COLUMN cl_employer.employer_id IS 'Auto Generated Primary key of the table';
COMMENT ON COLUMN cl_employer.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_employer.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_employer.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_employer.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_employer.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_employer.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_employer.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_fa_grant;
CREATE TABLE cl_fa_grant (fa_grant_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, fa_grant_amount NUMERIC(7,0) NOT NULL, delete_ind CHARACTER VARYING(1) NOT NULL, fa_grant_end_dt DATE NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30));
COMMENT ON COLUMN cl_fa_grant.fa_grant_id IS 'Auto Generated Primary key of the table';
COMMENT ON COLUMN cl_fa_grant.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_fa_grant.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_fa_grant.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_fa_grant.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_fa_grant.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_fa_grant.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_fa_grant.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_individual;
CREATE TABLE cl_individual (individual_id NUMERIC(12,0) NOT NULL, mdm_id CHARACTER VARYING(64), person_id CHARACTER VARYING(16), create_dt TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (individual_id), UNIQUE (person_id), UNIQUE (mdm_id));
COMMENT ON COLUMN cl_individual.individual_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_individual.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_individual.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_individual.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_individual.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_institute;
CREATE TABLE cl_institute (institute_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, admission_dt DATE NOT NULL, vendor_id NUMERIC(9,0) NOT NULL, discharge_dt DATE NOT NULL, certified_end_dt DATE NOT NULL, institute_type_cd CHARACTER VARYING(2) NOT NULL, level_of_care_cd CHARACTER VARYING(1) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30));
COMMENT ON COLUMN cl_institute.institute_id IS 'Auto Generated Primary key of the table';
COMMENT ON COLUMN cl_institute.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_institute.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_institute.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_institute.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_institute.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_institute.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_institute.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_insurance_asset;
CREATE TABLE cl_insurance_asset (insurance_asset_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, insurance_type_cd CHARACTER VARYING(2) NOT NULL, face_value_amount NUMERIC(9,2) NOT NULL, cash_value_amount NUMERIC(9,2) NOT NULL, cash_ver_cd CHARACTER VARYING(2) NOT NULL, cash_ver_dt DATE NOT NULL, insurance_policy_number CHARACTER VARYING(14) NOT NULL, insurance_inst_name CHARACTER VARYING(30) NOT NULL, delete_ind CHARACTER VARYING(1) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (insurance_asset_id));
COMMENT ON COLUMN cl_insurance_asset.insurance_asset_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_insurance_asset.individual_id IS 'Absent Parent ID';
COMMENT ON COLUMN cl_insurance_asset.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_insurance_asset.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_insurance_asset.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_insurance_asset.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_insurance_asset.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_insurance_asset.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_liquid_asset;
CREATE TABLE cl_liquid_asset (liquid_asset_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, asset_type_cd CHARACTER VARYING(2) NOT NULL, asset_amount NUMERIC(9,2) NOT NULL, asset_amount_ver_cd CHARACTER VARYING(2) NOT NULL, asset_amount_ver_dt DATE NOT NULL, financial_account_number CHARACTER VARYING(16) NOT NULL, financial_insitution_name CHARACTER VARYING(30) NOT NULL, bank_fdic_number NUMERIC(7,0) NOT NULL, delete_ind CHARACTER VARYING(1) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (liquid_asset_id));
COMMENT ON COLUMN cl_liquid_asset.liquid_asset_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_liquid_asset.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_liquid_asset.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_liquid_asset.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_liquid_asset.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_liquid_asset.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_liquid_asset.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_liquid_asset.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_living_arrangement;
CREATE TABLE cl_living_arrangement (living_arrangement_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, living_arrangement_type_cd CHARACTER VARYING(2) NOT NULL, living_arrangement_verification_cd CHARACTER VARYING(2) NOT NULL, living_arrangement_verification_dt DATE NOT NULL, boarder_meals_number NUMERIC(3,0) NOT NULL, meals_paid_amount NUMERIC(9,0) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), destitute_migrant_ind CHARACTER VARYING(1) NOT NULL);
COMMENT ON COLUMN cl_living_arrangement.living_arrangement_id IS 'Auto Generated Primary key of the table';
COMMENT ON COLUMN cl_living_arrangement.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_living_arrangement.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_living_arrangement.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_living_arrangement.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_living_arrangement.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_living_arrangement.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_living_arrangement.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_managed_care;
CREATE TABLE cl_managed_care (managed_care_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, managed_care_type CHARACTER VARYING(1) NOT NULL, managed_care_begin_dt DATE NOT NULL, managed_care_end_dt DATE NOT NULL, provider_vendor_id CHARACTER VARYING(9) NOT NULL, provider_name CHARACTER VARYING(28) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30));
COMMENT ON COLUMN cl_managed_care.managed_care_id IS 'Auto Generated Primary key of the table';
COMMENT ON COLUMN cl_managed_care.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_managed_care.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_managed_care.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_managed_care.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_managed_care.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_managed_care.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_managed_care.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_medical_expense;
CREATE TABLE cl_medical_expense (medical_expense_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, expense_type_cd CHARACTER VARYING(2) NOT NULL, expense_incur_dt DATE NOT NULL, expense_amount NUMERIC(9,2) NOT NULL, expense_frequency_cd CHARACTER VARYING(2) NOT NULL, expense_ver_cd CHARACTER VARYING(2) NOT NULL, expense_ver_dt NUMERIC(9,0) NOT NULL, service_provider_name CHARACTER VARYING(20) NOT NULL, service_provided_cd CHARACTER VARYING(2) NOT NULL, delete_ind CHARACTER VARYING(1) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (medical_expense_id));
COMMENT ON COLUMN cl_medical_expense.medical_expense_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_medical_expense.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_medical_expense.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_medical_expense.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_medical_expense.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_medical_expense.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_medical_expense.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_medical_expense.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_medicare_denial;
CREATE TABLE cl_medicare_denial (medicare_denial_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, insitution_admission_dt NUMERIC(9,0) NOT NULL, vendor_id NUMERIC(9,0) NOT NULL, medicare_denial_dt NUMERIC(9,0) NOT NULL, payment_auth_dt NUMERIC(9,0) NOT NULL, ltc_mcare_certificate_ind CHARACTER VARYING(1) NOT NULL, delete_ind CHARACTER VARYING(1) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (medicare_denial_id));
COMMENT ON COLUMN cl_medicare_denial.medicare_denial_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_medicare_denial.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_medicare_denial.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_medicare_denial.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_medicare_denial.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_medicare_denial.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_medicare_denial.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_medicare_denial.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_name;
CREATE TABLE cl_name (name_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, first_name CHARACTER VARYING(50) NOT NULL, middle_name CHARACTER VARYING(50), last_name CHARACTER VARYING(50) NOT NULL, suffix_cd CHARACTER VARYING(64), alt_name_ind CHARACTER VARYING(1) DEFAULT 'N'::character varying, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (name_id));
COMMENT ON COLUMN cl_name.name_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_name.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_name.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_name.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_name.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_name.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_name.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_name.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_other_agency_benefits;
CREATE TABLE cl_other_agency_benefits (other_agency_benefits_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, benefit_type_cd CHARACTER VARYING(2) NOT NULL, benefit_status_cd CHARACTER VARYING(1) NOT NULL, benefit_status_dt DATE NOT NULL, delete_ind CHARACTER VARYING(1) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30));
COMMENT ON COLUMN cl_other_agency_benefits.other_agency_benefits_id IS 'Auto Generated Primary key of the table';
COMMENT ON COLUMN cl_other_agency_benefits.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_other_agency_benefits.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_other_agency_benefits.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_other_agency_benefits.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_other_agency_benefits.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_other_agency_benefits.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_other_agency_benefits.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_other_asset;
CREATE TABLE cl_other_asset (other_asset_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, transfer_dt DATE NOT NULL, asset_type_cd CHARACTER VARYING(2) NOT NULL, transfer_reason_cd CHARACTER VARYING(1) NOT NULL, transfer_discovery_dt DATE NOT NULL, fmv_amount NUMERIC(9,2) NOT NULL, fmv_ver_cd CHARACTER VARYING(2) NOT NULL, fmv_ver_dt NUMERIC(9,0) NOT NULL, transfer_record_amount NUMERIC(9,2) NOT NULL, transfer_ver_cd CHARACTER VARYING(2) NOT NULL, transfer_ver_dt NUMERIC(9,0) NOT NULL, delete_ind CHARACTER VARYING(1) NOT NULL, transferee_relationship_cd CHARACTER VARYING(2) NOT NULL, hardship_reason_cd CHARACTER VARYING(2) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (other_asset_id));
COMMENT ON COLUMN cl_other_asset.other_asset_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_other_asset.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_other_asset.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_other_asset.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_other_asset.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_other_asset.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_other_asset.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_other_asset.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_policy;
CREATE TABLE cl_policy (policy_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, carrier_name CHARACTER VARYING(25) NOT NULL, carrier_start_number CHARACTER VARYING(6) NOT NULL, carr_strt_dir_cd CHARACTER VARYING(2) NOT NULL, carrier_start_name CHARACTER VARYING(22) NOT NULL, carrier_start_type_cd CHARACTER VARYING(4) NOT NULL, carrier_city CHARACTER VARYING(22) NOT NULL, carrier_state CHARACTER VARYING(2) NOT NULL, carrier_zipcode NUMERIC(9,0) NOT NULL, carrier_areacode NUMERIC(3,0) NOT NULL, carrier_phone_number NUMERIC(7,0) NOT NULL, union_name CHARACTER VARYING(25) NOT NULL, union_local_number CHARACTER VARYING(4) NOT NULL, union_start_num CHARACTER VARYING(6) NOT NULL, union_strt_dir_cd CHARACTER VARYING(2) NOT NULL, union_start_name CHARACTER VARYING(22) NOT NULL, union_start_type_cd CHARACTER VARYING(4) NOT NULL, union_city CHARACTER VARYING(22) NOT NULL, union_state CHARACTER VARYING(2) NOT NULL, union_zipcode NUMERIC(9,0) NOT NULL, union_areacode NUMERIC(3,0) NOT NULL, union_phone_num NUMERIC(7,0) NOT NULL, policy_holder_name CHARACTER VARYING(25) NOT NULL, policy_holder_relation_cd CHARACTER VARYING(2) NOT NULL, policy_holder_start_number CHARACTER VARYING(6) NOT NULL, policy_holder_start_name CHARACTER VARYING(22) NOT NULL, policy_holder_start_type_cd CHARACTER VARYING(4) NOT NULL, policy_holder_city CHARACTER VARYING(22) NOT NULL, policy_holder_state CHARACTER VARYING(2) NOT NULL, policy_holder_zipcode NUMERIC(9,0) NOT NULL, policy_holder_areacode NUMERIC(3,0) NOT NULL, policy_holder_phone_number NUMERIC(7,0) NOT NULL, policy_individual_number CHARACTER VARYING(13) NOT NULL, policy_group_number CHARACTER VARYING(15) NOT NULL, delete_ind CHARACTER VARYING(1) NOT NULL, last_activity_dt DATE NOT NULL, source_cd CHARACTER VARYING(2) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (policy_id));
COMMENT ON COLUMN cl_policy.policy_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_policy.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_policy.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_policy.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_policy.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_policy.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_policy.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_policy.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_pregnancy;
CREATE TABLE cl_pregnancy (pregnancy_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, pregnancy_cd CHARACTER VARYING(64) NOT NULL, pregnancy_dt TIMESTAMP(6) WITHOUT TIME ZONE NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, PRIMARY KEY (pregnancy_id));
COMMENT ON COLUMN cl_pregnancy.pregnancy_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_pregnancy.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_pregnancy.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_pregnancy.effective_end_dt IS 'Effective end date of the program';
DROP TABLE cl_real_estate_asset;
CREATE TABLE cl_real_estate_asset (real_estate_asset_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, real_estate_use_cd CHARACTER VARYING(2) NOT NULL, fmv_amt NUMERIC(9,0) NOT NULL, fmv_amt_ver_cd CHARACTER VARYING(2) NOT NULL, fmv_amt_ver_dt NUMERIC(9,0) NOT NULL, encumb_amt NUMERIC(9,0) NOT NULL, encumb_ver_cd CHARACTER VARYING(2) NOT NULL, encumb_ver_dt DATE NOT NULL, effort_to_sell_ind CHARACTER VARYING(1) NOT NULL, real_estate_street CHARACTER VARYING(22) NOT NULL, real_estate_city CHARACTER VARYING(15) NOT NULL, real_estate_state CHARACTER VARYING(2) NOT NULL, real_estate_zipcode NUMERIC(9,0) NOT NULL, real_estate_lien_dt DATE NOT NULL, history_change_delete_ind CHARACTER VARYING(1) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (real_estate_asset_id));
COMMENT ON COLUMN cl_real_estate_asset.real_estate_asset_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_real_estate_asset.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_real_estate_asset.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_real_estate_asset.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_real_estate_asset.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_real_estate_asset.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_real_estate_asset.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_real_estate_asset.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_shelter_deduction;
CREATE TABLE cl_shelter_deduction (shelter_deduction_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, utility_method_ind CHARACTER VARYING(1) NOT NULL, expense_number NUMERIC(3,0) NOT NULL, delete_ind CHARACTER VARYING(1) NOT NULL, hashing_asst_type_cd CHARACTER VARYING(1) NOT NULL, public_hashing_verf CHARACTER VARYING(2) NOT NULL, public_hashing_dt NUMERIC(9,0) NOT NULL, rent_vn_begin_dt DATE NOT NULL, rent_vn_end_dt DATE NOT NULL, utility_method_ver_cd CHARACTER VARYING(1) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (shelter_deduction_id));
COMMENT ON COLUMN cl_shelter_deduction.shelter_deduction_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_shelter_deduction.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_shelter_deduction.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_shelter_deduction.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_shelter_deduction.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_shelter_deduction.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_shelter_deduction.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_shelter_deduction.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_shelter_expense;
CREATE TABLE cl_shelter_expense (shelter_expense_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, shelter_expense_type_cd CHARACTER VARYING(2) NOT NULL, shelter_expense_amount NUMERIC(9,0) NOT NULL, shelter_expense_version_cd CHARACTER VARYING(2) NOT NULL, shelter_expense_version_dt DATE NOT NULL, delete_ind CHARACTER VARYING(1) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (shelter_expense_id));
COMMENT ON COLUMN cl_shelter_expense.shelter_expense_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_shelter_expense.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_shelter_expense.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_shelter_expense.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_shelter_expense.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_shelter_expense.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_shelter_expense.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_shelter_expense.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_ssn;
CREATE TABLE cl_ssn (ssn_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, ssn CHARACTER VARYING(15), effective_begin_dt DATE NOT NULL, effective_end_dt DATE, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (ssn_id));
COMMENT ON COLUMN cl_ssn.ssn_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_ssn.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_ssn.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_ssn.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_ssn.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_ssn.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_ssn.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_ssn.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_transfer_asset;
CREATE TABLE cl_transfer_asset (transfer_asset_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, transfer_dt DATE NOT NULL, asset_type_cd CHARACTER VARYING(2) NOT NULL, transfer_reason_cd CHARACTER VARYING(1) NOT NULL, transfer_discovery_dt DATE NOT NULL, fmv_amt NUMERIC(9,0) NOT NULL, fmv_ver_cd CHARACTER VARYING(2) NOT NULL, fmv_ver_dt DATE NOT NULL, transfer_received_amount NUMERIC(9,0) NOT NULL, transfer_version_cd CHARACTER VARYING(2) NOT NULL, transfer_version_dt DATE NOT NULL, delete_ind CHARACTER VARYING(1) NOT NULL, transferee_rel_cd CHARACTER VARYING(2) NOT NULL, hardship_rsn_cd CHARACTER VARYING(2) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (transfer_asset_id));
COMMENT ON COLUMN cl_transfer_asset.transfer_asset_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_transfer_asset.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_transfer_asset.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_transfer_asset.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_transfer_asset.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_transfer_asset.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_transfer_asset.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_transfer_asset.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_unearned_income_amount;
CREATE TABLE cl_unearned_income_amount (unearned_income_amount_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, ui_type_cd CHARACTER VARYING(2) NOT NULL, ui_amount NUMERIC(9,2) NOT NULL, amount_ver_cd CHARACTER VARYING(2) NOT NULL, amount_ver_dt DATE NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (unearned_income_amount_id));
COMMENT ON COLUMN cl_unearned_income_amount.unearned_income_amount_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_unearned_income_amount.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_unearned_income_amount.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_unearned_income_amount.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_unearned_income_amount.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_unearned_income_amount.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_unearned_income_amount.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_unearned_income_amount.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_unearned_income_expense;
CREATE TABLE cl_unearned_income_expense (unearned_income_expense_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, ui_type_cd CHARACTER VARYING(2) NOT NULL, expense_amount CHARACTER VARYING(12) NOT NULL, delete_ind CHARACTER VARYING(1) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (unearned_income_expense_id));
COMMENT ON COLUMN cl_unearned_income_expense.unearned_income_expense_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_unearned_income_expense.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_unearned_income_expense.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_unearned_income_expense.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_unearned_income_expense.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_unearned_income_expense.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_unearned_income_expense.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_unearned_income_expense.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_unearned_income_inc;
CREATE TABLE cl_unearned_income_inc (unearned_income_inc_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, ui_type_cd CHARACTER VARYING(2) NOT NULL, ui_frequency_cd CHARACTER VARYING(2) NOT NULL, claim_number CHARACTER VARYING(12) NOT NULL, pickle_pot_ind CHARACTER VARYING(1) NOT NULL, delete_ind CHARACTER VARYING(1) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (unearned_income_inc_id));
COMMENT ON COLUMN cl_unearned_income_inc.unearned_income_inc_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_unearned_income_inc.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_unearned_income_inc.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_unearned_income_inc.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_unearned_income_inc.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_unearned_income_inc.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_unearned_income_inc.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_unearned_income_inc.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_unearned_income_inc_amount;
CREATE TABLE cl_unearned_income_inc_amount (unearned_income_inc_amount_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, ui_type_cd CHARACTER VARYING(2) NOT NULL, ui_frequency_cd CHARACTER VARYING(2) NOT NULL, claim_number CHARACTER VARYING(12) NOT NULL, pickle_pot_ind CHARACTER VARYING(1) NOT NULL, delete_ind CHARACTER VARYING(1) NOT NULL, ui_amount NUMERIC(9,2) NOT NULL, amount_ver_cd CHARACTER VARYING(2) NOT NULL, amount_ver_dt DATE NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (unearned_income_inc_amount_id));
COMMENT ON COLUMN cl_unearned_income_inc_amount.unearned_income_inc_amount_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_unearned_income_inc_amount.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_unearned_income_inc_amount.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_unearned_income_inc_amount.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_unearned_income_inc_amount.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_unearned_income_inc_amount.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_unearned_income_inc_amount.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_unearned_income_inc_amount.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_vehicular_asset;
CREATE TABLE cl_vehicular_asset (vehicular_asset_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, cma_vehicle_use_cd CHARACTER VARYING(2) NOT NULL, fs_vehicle_use_cd CHARACTER VARYING(2) NOT NULL, vehicle_type_cd CHARACTER VARYING(2) NOT NULL, vehicle_fmv_amt NUMERIC(9,0) NOT NULL, vehicle_fmv_ver_cd CHARACTER VARYING(2) NOT NULL, vehicle_fmv_ver_dt DATE NOT NULL, encumb_amt NUMERIC(9,0) NOT NULL, encumb_ver_cd CHARACTER VARYING(2) NOT NULL, encumb_ver_dt DATE NOT NULL, vehicle_make_cd CHARACTER VARYING(4) NOT NULL, vehicle_model_cd CHARACTER VARYING(2) NOT NULL, vehicle_year_made_cd CHARACTER VARYING(2) NOT NULL, license_number CHARACTER VARYING(7) NOT NULL, vin_num CHARACTER VARYING(20) NOT NULL, registration_number CHARACTER VARYING(12) NOT NULL, delete_ind CHARACTER VARYING(1) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (vehicular_asset_id));
COMMENT ON COLUMN cl_vehicular_asset.vehicular_asset_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_vehicular_asset.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_vehicular_asset.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_vehicular_asset.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_vehicular_asset.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_vehicular_asset.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_vehicular_asset.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_vehicular_asset.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_welfare_reform;
CREATE TABLE cl_welfare_reform (welfare_reform_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, last_updated_user CHARACTER VARYING(8) NOT NULL, last_updated_program CHARACTER VARYING(8) NOT NULL, last_updated TIMESTAMP(6) WITHOUT TIME ZONE NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30));
COMMENT ON COLUMN cl_welfare_reform.welfare_reform_id IS 'Auto Generated Primary key of the table';
COMMENT ON COLUMN cl_welfare_reform.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_welfare_reform.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_welfare_reform.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_welfare_reform.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_welfare_reform.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_welfare_reform.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_welfare_reform.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_work;
CREATE TABLE cl_work (work_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, employer_id NUMERIC(12,0) NOT NULL, expense_type_cd CHARACTER VARYING(2) NOT NULL, expense_freq_cd CHARACTER VARYING(2) NOT NULL, expense_amt NUMERIC(9,0) NOT NULL, expense_ver_cd CHARACTER VARYING(2) NOT NULL, expense_ver_dt DATE NOT NULL, delete_ind CHARACTER VARYING(1) NOT NULL, income_amount_version_dt DATE NOT NULL, work_hours_number SMALLINT NOT NULL, income_amount NUMERIC(9,0) NOT NULL, income_amtount_version_cd CHARACTER VARYING(2) NOT NULL, income_id SMALLINT NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (work_id));
COMMENT ON COLUMN cl_work.work_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_work.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_work.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_work.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_work.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_work.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_work.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_work.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_work_expense;
CREATE TABLE cl_work_expense (work_expense_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, employer_id NUMERIC(12,0) NOT NULL, expense_type_cd CHARACTER VARYING(2) NOT NULL, expense_frequency_cd CHARACTER VARYING(2) NOT NULL, expense_amount NUMERIC(9,2) NOT NULL, expense_ver_cd CHARACTER VARYING(2) NOT NULL, expense_ver_dt DATE NOT NULL, delete_ind CHARACTER VARYING(1) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (work_expense_id));
COMMENT ON COLUMN cl_work_expense.work_expense_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cl_work_expense.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_work_expense.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_work_expense.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_work_expense.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_work_expense.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_work_expense.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_work_expense.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cl_work_income;
CREATE TABLE cl_work_income (work_income_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, employer_id NUMERIC(12,0) NOT NULL, income_amount_verification_dt DATE NOT NULL, work_hours_number SMALLINT NOT NULL, income_amount NUMERIC(9,0) NOT NULL, income_amount_verification_cd CHARACTER VARYING(2) NOT NULL, income_sequence_number SMALLINT NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, session_id CHARACTER VARYING(50) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30));
COMMENT ON COLUMN cl_work_income.work_income_id IS 'Auto Generated Primary key of the table';
COMMENT ON COLUMN cl_work_income.individual_id IS 'Client ID';
COMMENT ON COLUMN cl_work_income.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cl_work_income.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cl_work_income.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cl_work_income.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cl_work_income.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cl_work_income.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cs_auth_rep;
CREATE TABLE cs_auth_rep (auth_rep_id NUMERIC(12,0) NOT NULL, benefits_case_id NUMERIC(12,0) NOT NULL, relationship_cd CHARACTER VARYING(64) NOT NULL, relationship_type_cd CHARACTER VARYING(64), first_name CHARACTER VARYING(50), middle_name CHARACTER VARYING(50), last_name CHARACTER VARYING(50), suffix_cd CHARACTER VARYING(64), phone_number_type_cd CHARACTER VARYING(64), phone_number_extension CHARACTER VARYING(8), phone_number CHARACTER VARYING(20), address_line_1 CHARACTER VARYING(60) NOT NULL, address_line_2 CHARACTER VARYING(60), city CHARACTER VARYING(30), zipcode CHARACTER VARYING(10) NOT NULL, district_cd CHARACTER VARYING(64), state_cd CHARACTER VARYING(64) NOT NULL, county_cd CHARACTER VARYING(64) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (auth_rep_id));
COMMENT ON COLUMN cs_auth_rep.auth_rep_id IS 'Auto Generated Primary key of the table ';
DROP TABLE cs_benefits_case;
CREATE TABLE cs_benefits_case (benefits_case_id NUMERIC(12,0) NOT NULL, case_id CHARACTER VARYING(16), case_status_cd CHARACTER VARYING(64) NOT NULL, lock_ind CHARACTER VARYING(1) DEFAULT 'N'::character varying NOT NULL, signature_provided_ind CHARACTER VARYING(1) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (benefits_case_id), UNIQUE (case_id));
COMMENT ON COLUMN cs_benefits_case.benefits_case_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cs_benefits_case.case_id IS 'Unique case id which will be sent to the user. This will have a prefix "C" with an 12 digit number = the primary key prefixing an offset equating to 12. And a three digit hash at the end. ';
COMMENT ON COLUMN cs_benefits_case.case_status_cd IS 'Marks if the case is active, Withdrawn,';
COMMENT ON COLUMN cs_benefits_case.lock_ind IS 'Marks if the case is locked for a particular worker';
COMMENT ON COLUMN cs_benefits_case.signature_provided_ind IS 'Marks if the application has been signed by the client';
COMMENT ON COLUMN cs_benefits_case.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cs_benefits_case.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cs_benefits_case.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cs_benefits_case.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cs_individual_membership;
CREATE TABLE cs_individual_membership (individual_membership_id NUMERIC(12,0) NOT NULL, benefits_case_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, head_of_household_ind CHARACTER VARYING(1) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (individual_membership_id));
COMMENT ON COLUMN cs_individual_membership.individual_membership_id IS 'Auto Generated Primary key of the table ';
DROP TABLE cs_program;
CREATE TABLE cs_program (program_eligibility_id NUMERIC(12,0) NOT NULL, benefits_case_id NUMERIC(12,0) NOT NULL, program_cd CHARACTER VARYING(64) NOT NULL, program_type_cd CHARACTER VARYING(64), med_coverage_group_cd CHARACTER VARYING(64), program_status_cd CHARACTER VARYING(64) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (program_eligibility_id));
COMMENT ON COLUMN cs_program.program_eligibility_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cs_program.program_cd IS 'Short Lookup code for the program attached to the case';
COMMENT ON COLUMN cs_program.program_type_cd IS 'Short code for the type of Program';
COMMENT ON COLUMN cs_program.program_status_cd IS 'Short code for the program status';
COMMENT ON COLUMN cs_program.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cs_program.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cs_program.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cs_program.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cs_program.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cs_program.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cs_program_eligibility;
CREATE TABLE cs_program_eligibility (program_eligibility_id NUMERIC(12,0) NOT NULL, benefits_case_id NUMERIC(12,0) NOT NULL, program_cd CHARACTER VARYING(64) NOT NULL, program_type_cd CHARACTER VARYING(64), med_coverage_group_cd CHARACTER VARYING(64), requested_ind CHARACTER VARYING(1), recommended_ind CHARACTER VARYING(1), selected_ind CHARACTER VARYING(1), eligible_ind CHARACTER VARYING(1), finalize_ind CHARACTER VARYING(1), program_status_cd CHARACTER VARYING(64) NOT NULL, ppi_group_cd CHARACTER VARYING(64), expedited_food_stamps_ind CHARACTER VARYING(1), cap_ind CHARACTER VARYING(1), effective_begin_dt DATE NOT NULL, effective_end_dt DATE, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (program_eligibility_id));
COMMENT ON COLUMN cs_program_eligibility.program_eligibility_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cs_program_eligibility.program_cd IS 'Short Lookup code for the program attached to the case';
COMMENT ON COLUMN cs_program_eligibility.program_type_cd IS 'Short code for the type of Program';
COMMENT ON COLUMN cs_program_eligibility.requested_ind IS 'Marks if the user requested for this program: KIND Screen';
COMMENT ON COLUMN cs_program_eligibility.recommended_ind IS 'Marks if the system has recomendded the programs';
COMMENT ON COLUMN cs_program_eligibility.selected_ind IS 'Marks if the program is selected by the user';
COMMENT ON COLUMN cs_program_eligibility.eligible_ind IS 'Marks if the user is eligble for the program';
COMMENT ON COLUMN cs_program_eligibility.finalize_ind IS 'Marks if the program has been finalized';
COMMENT ON COLUMN cs_program_eligibility.program_status_cd IS 'Short code for the program status';
COMMENT ON COLUMN cs_program_eligibility.ppi_group_cd IS 'Short code for the PPI group type';
COMMENT ON COLUMN cs_program_eligibility.expedited_food_stamps_ind IS 'Marks if household is eligible for expedited food stamps';
COMMENT ON COLUMN cs_program_eligibility.effective_begin_dt IS 'Effective begin date of the program';
COMMENT ON COLUMN cs_program_eligibility.effective_end_dt IS 'Effective end date of the program';
COMMENT ON COLUMN cs_program_eligibility.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cs_program_eligibility.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cs_program_eligibility.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cs_program_eligibility.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE cs_scr_absent_parent;
CREATE TABLE cs_scr_absent_parent (scr_absent_parent_id NUMERIC(12,0) NOT NULL, benefits_case_id NUMERIC(12,0) NOT NULL, first_name CHARACTER VARYING(50), middle_name CHARACTER VARYING(50), last_name CHARACTER VARYING(50), suffix_cd CHARACTER VARYING(64), ssn CHARACTER VARYING(12), gender_cd CHARACTER VARYING(64) DEFAULT 'CURRENT_TIMESTAMP'::character varying NOT NULL, race_cd CHARACTER VARYING(64) NOT NULL, date_of_birth_dt TIMESTAMP(6) WITHOUT TIME ZONE, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (scr_absent_parent_id));
COMMENT ON COLUMN cs_scr_absent_parent.scr_absent_parent_id IS 'Auto Generated Primary key of the table ';
DROP TABLE cs_scr_circumstance;
CREATE TABLE cs_scr_circumstance (scr_circumstance_id NUMERIC(12,0) NOT NULL, benefits_case_id NUMERIC(12,0) NOT NULL, homeless_ind CHARACTER VARYING(1), disabled_ind CHARACTER VARYING(1), refugee_ind CHARACTER VARYING(1) DEFAULT 'CURRENT_TIMESTAMP'::character varying, shelter_includes_meal_ind CHARACTER VARYING(1), protective_living_arrangment_ind CHARACTER VARYING(1), blind_ind CHARACTER VARYING(1), community_based_waiver_ind CHARACTER VARYING(1) DEFAULT 'CURRENT_TIMESTAMP'::character varying, destitute_migrant_ind CHARACTER VARYING(1), medicare_part_a_entiltilment_ind CHARACTER VARYING(1), auth_rep_ind CHARACTER VARYING(1), effective_begin_dt DATE NOT NULL, effective_end_dt DATE, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (scr_circumstance_id));
COMMENT ON COLUMN cs_scr_circumstance.scr_circumstance_id IS 'Auto Generated Primary key of the table ';
DROP TABLE cs_scr_financial_info;
CREATE TABLE cs_scr_financial_info (scr_financial_info_id NUMERIC(12,0) NOT NULL, benefits_case_id NUMERIC(12,0) NOT NULL, type_cd CHARACTER VARYING(64) NOT NULL, amount NUMERIC(12,2) NOT NULL, financial_info_type_cd CHARACTER VARYING(64) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), sub_type_cd CHARACTER VARYING(32), PRIMARY KEY (scr_financial_info_id));
COMMENT ON COLUMN cs_scr_financial_info.scr_financial_info_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cs_scr_financial_info.financial_info_type_cd IS 'Saves if the details are for Earned/Unearned/Shelter or Assets ';
DROP TABLE cs_worker_assignment;
CREATE TABLE cs_worker_assignment (worker_assignment_id NUMERIC(12,0) NOT NULL, benefits_case_id NUMERIC(12,0) NOT NULL, worker_user_id CHARACTER VARYING(30) NOT NULL, assignment_begin_dt TIMESTAMP(6) WITHOUT TIME ZONE NOT NULL, assignment_end_dt TIMESTAMP(6) WITHOUT TIME ZONE, assignor_user_id CHARACTER VARYING(30) NOT NULL, active_ind CHARACTER VARYING(1) DEFAULT 'Y'::character varying NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (worker_assignment_id));
COMMENT ON COLUMN cs_worker_assignment.worker_assignment_id IS 'Auto Generated Primary key of the table ';
COMMENT ON COLUMN cs_worker_assignment.worker_user_id IS 'Worker login id, to whom the case has been assigned to. ';
COMMENT ON COLUMN cs_worker_assignment.assignment_begin_dt IS 'The date the worker started working on the case';
COMMENT ON COLUMN cs_worker_assignment.assignment_end_dt IS 'The date the worker completed handling of the case and either closed it, or transferred it.';
COMMENT ON COLUMN cs_worker_assignment.assignor_user_id IS 'Worker login user Id to whom the case has been assigned to';
COMMENT ON COLUMN cs_worker_assignment.active_ind IS 'Marks if the worker is currently working on the case';
COMMENT ON COLUMN cs_worker_assignment.create_dt IS 'Time of insertion.';
COMMENT ON COLUMN cs_worker_assignment.create_user_id IS 'Saves the user login id at the time of insertion';
COMMENT ON COLUMN cs_worker_assignment.update_dt IS 'Updates the time to the latest update by the user';
COMMENT ON COLUMN cs_worker_assignment.update_user_id IS 'Updates the user login id to the user who last updated the record';
DROP TABLE t_address;
CREATE TABLE t_address (address_id NUMERIC(12,0) NOT NULL, address_line_1 CHARACTER VARYING(60) NOT NULL, address_line_2 CHARACTER VARYING(60), city CHARACTER VARYING(30), zipcode CHARACTER VARYING(10) NOT NULL, district_cd CHARACTER VARYING(64), state_cd CHARACTER VARYING(64) NOT NULL, county_cd CHARACTER VARYING(64) NOT NULL, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), verification_complete_ind CHARACTER VARYING(1) DEFAULT 'N'::character varying NOT NULL, PRIMARY KEY (address_id));
COMMENT ON COLUMN t_address.address_id IS 'Auto Generated Primary key of the table ';
DROP TABLE t_case_address;
CREATE TABLE t_case_address (case_address_id NUMERIC(12,0) NOT NULL, address_id NUMERIC(12,0) NOT NULL, benefits_case_id NUMERIC(12,0) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), address_type_cd CHARACTER VARYING(32), PRIMARY KEY (case_address_id));
COMMENT ON COLUMN t_case_address.case_address_id IS 'Auto Generated Primary key of the table ';
DROP TABLE t_case_contact_info;
CREATE TABLE t_case_contact_info (case_contact_info_id NUMERIC(12,0) NOT NULL, contact_info_id NUMERIC(12,0) NOT NULL, benefits_case_id NUMERIC(12,0), effective_begin_dt DATE NOT NULL, effective_end_dt DATE, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (case_contact_info_id));
COMMENT ON COLUMN t_case_contact_info.case_contact_info_id IS 'Auto Generated Primary key of the table ';
DROP TABLE t_contact_info;
CREATE TABLE t_contact_info (contact_info_id NUMERIC(12,0) NOT NULL, preferred_lang_cd CHARACTER VARYING(64) NOT NULL, interpreter_ind CHARACTER VARYING(1), visually_impaired_ind CHARACTER VARYING(1), hearing_impaired_ind CHARACTER VARYING(1), type_of_hearing_impairment_cd CHARACTER VARYING(64), phone_number_type_cd CHARACTER VARYING(64), phone_number_extension CHARACTER VARYING(8), phone_number CHARACTER VARYING(20), alt_phone_number_type_cd CHARACTER VARYING(64), alt_phone_number_extension CHARACTER VARYING(8), alt_phone_number CHARACTER VARYING(20), email CHARACTER VARYING(50), create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (contact_info_id));
COMMENT ON COLUMN t_contact_info.contact_info_id IS 'Auto Generated Primary key of the table ';
DROP TABLE t_individual_address;
CREATE TABLE t_individual_address (individual_address_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, address_id NUMERIC(12,0) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), address_type_cd CHARACTER VARYING(32), PRIMARY KEY (individual_address_id));
COMMENT ON COLUMN t_individual_address.individual_address_id IS 'Auto Generated Primary key of the table ';
DROP TABLE t_individual_contact_info;
CREATE TABLE t_individual_contact_info (individual_contact_info_id NUMERIC(12,0) NOT NULL, contact_info_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0), effective_begin_dt DATE NOT NULL, effective_end_dt DATE, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (individual_contact_info_id));
COMMENT ON COLUMN t_individual_contact_info.individual_contact_info_id IS 'Auto Generated Primary key of the table ';
DROP TABLE t_individual_relationship;
CREATE TABLE t_individual_relationship (individual_relationship_id NUMERIC(12,0) NOT NULL, benefits_case_id NUMERIC(12,0) NOT NULL, individual_id NUMERIC(12,0) NOT NULL, related_individual_id NUMERIC(12,0) NOT NULL, relationship_cd CHARACTER VARYING(64) NOT NULL, effective_begin_dt DATE NOT NULL, effective_end_dt DATE, create_dt TIMESTAMP(6) WITHOUT TIME ZONE DEFAULT now() NOT NULL, create_user_id CHARACTER VARYING(30) NOT NULL, update_dt TIMESTAMP(6) WITHOUT TIME ZONE, update_user_id CHARACTER VARYING(30), PRIMARY KEY (individual_relationship_id));
COMMENT ON COLUMN t_individual_relationship.individual_relationship_id IS 'Auto Generated Primary key of the table ';
ALTER TABLE "cl_absent_parent" ADD CONSTRAINT cl_absent_parent_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_absent_parent_court_order" ADD CONSTRAINT cl_absent_parent_court_order_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_absent_parent_court_order" ADD CONSTRAINT cl_absent_parent_court_order_absent_parent_id_fkey FOREIGN KEY ("absent_parent_id") REFERENCES "cl_absent_parent" ("absent_parent_id");
ALTER TABLE "cl_absent_parent_demographic" ADD CONSTRAINT cl_absent_parent_demographic_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_absent_parent_demographic" ADD CONSTRAINT cl_absent_parent_demographic_absent_parent_id_fkey FOREIGN KEY ("absent_parent_id") REFERENCES "cl_absent_parent" ("absent_parent_id");
ALTER TABLE "cl_absent_parent_employment" ADD CONSTRAINT cl_absent_parent_employment_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_absent_parent_employment" ADD CONSTRAINT cl_absent_parent_employment_absent_parent_id_fkey FOREIGN KEY ("absent_parent_id") REFERENCES "cl_absent_parent" ("absent_parent_id");
ALTER TABLE "cl_absent_parent_mva" ADD CONSTRAINT cl_absent_parent_mva_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_absent_parent_mva" ADD CONSTRAINT cl_absent_parent_mva_absent_parent_id_fkey FOREIGN KEY ("absent_parent_id") REFERENCES "cl_absent_parent" ("absent_parent_id");
ALTER TABLE "cl_community_service" ADD CONSTRAINT cl_community_service_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_demographic_attribute" ADD CONSTRAINT cl_demographic_attribute_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_deprivation" ADD CONSTRAINT cl_deprivation_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_disability" ADD CONSTRAINT cl_disability_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_earned_income" ADD CONSTRAINT cl_earned_income_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_educational_qualification" ADD CONSTRAINT cl_educational_qualification_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_employer" ADD CONSTRAINT cl_employer_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_fa_grant" ADD CONSTRAINT cl_fa_grant_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_institute" ADD CONSTRAINT cl_institute_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_insurance_asset" ADD CONSTRAINT cl_insurance_asset_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_liquid_asset" ADD CONSTRAINT cl_liquid_asset_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_living_arrangement" ADD CONSTRAINT cl_living_arrangement_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_managed_care" ADD CONSTRAINT cl_managed_care_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_medical_expense" ADD CONSTRAINT cl_medical_expense_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_medicare_denial" ADD CONSTRAINT cl_medicare_denial_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_name" ADD CONSTRAINT cl_name_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_other_agency_benefits" ADD CONSTRAINT cl_other_agency_benefits_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_other_asset" ADD CONSTRAINT cl_other_asset_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_policy" ADD CONSTRAINT cl_policy_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_pregnancy" ADD CONSTRAINT cl_pregnancy_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_real_estate_asset" ADD CONSTRAINT cl_real_estate_asset_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_shelter_deduction" ADD CONSTRAINT cl_shelter_deduction_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_shelter_expense" ADD CONSTRAINT cl_shelter_expense_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_ssn" ADD CONSTRAINT cl_ssn_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_transfer_asset" ADD CONSTRAINT cl_transfer_asset_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_unearned_income_amount" ADD CONSTRAINT cl_unearned_income_amount_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_unearned_income_expense" ADD CONSTRAINT cl_unearned_income_expense_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_unearned_income_inc" ADD CONSTRAINT cl_unearned_income_inc_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_unearned_income_inc_amount" ADD CONSTRAINT cl_unearned_income_inc_amount_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_vehicular_asset" ADD CONSTRAINT cl_vehicular_asset_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_welfare_reform" ADD CONSTRAINT cl_welfare_reform_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_work" ADD CONSTRAINT cl_work_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_work" ADD CONSTRAINT cl_work_employer_id_fkey FOREIGN KEY ("employer_id") REFERENCES "cl_employer" ("employer_id");
ALTER TABLE "cl_work_expense" ADD CONSTRAINT cl_work_expense_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_work_expense" ADD CONSTRAINT cl_work_expense_employer_id_fkey FOREIGN KEY ("employer_id") REFERENCES "cl_employer" ("employer_id");
ALTER TABLE "cl_work_income" ADD CONSTRAINT cl_work_income_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cl_work_income" ADD CONSTRAINT cl_work_income_employer_id_fkey FOREIGN KEY ("employer_id") REFERENCES "cl_employer" ("employer_id");
ALTER TABLE "cs_auth_rep" ADD CONSTRAINT cs_auth_rep_benefits_case_id_fkey FOREIGN KEY ("benefits_case_id") REFERENCES "cs_benefits_case" ("benefits_case_id");
ALTER TABLE "cs_individual_membership" ADD CONSTRAINT cs_individual_membership_benefits_case_id_fkey FOREIGN KEY ("benefits_case_id") REFERENCES "cs_benefits_case" ("benefits_case_id");
ALTER TABLE "cs_individual_membership" ADD CONSTRAINT cs_individual_membership_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "cs_program" ADD CONSTRAINT cs_program_benefits_case_id_fkey FOREIGN KEY ("benefits_case_id") REFERENCES "cs_benefits_case" ("benefits_case_id");
ALTER TABLE "cs_program_eligibility" ADD CONSTRAINT cs_program_eligibility_benefits_case_id_fkey FOREIGN KEY ("benefits_case_id") REFERENCES "cs_benefits_case" ("benefits_case_id");
ALTER TABLE "cs_scr_absent_parent" ADD CONSTRAINT cs_scr_absent_parent_benefits_case_id_fkey FOREIGN KEY ("benefits_case_id") REFERENCES "cs_benefits_case" ("benefits_case_id");
ALTER TABLE "cs_scr_circumstance" ADD CONSTRAINT cs_scr_circumstance_benefits_case_id_fkey FOREIGN KEY ("benefits_case_id") REFERENCES "cs_benefits_case" ("benefits_case_id");
ALTER TABLE "cs_scr_financial_info" ADD CONSTRAINT cs_scr_financial_info_benefits_case_id_fkey FOREIGN KEY ("benefits_case_id") REFERENCES "cs_benefits_case" ("benefits_case_id");
ALTER TABLE "cs_worker_assignment" ADD CONSTRAINT cs_worker_assignment_benefits_case_id_fkey FOREIGN KEY ("benefits_case_id") REFERENCES "cs_benefits_case" ("benefits_case_id");
ALTER TABLE "t_case_address" ADD CONSTRAINT t_case_address_address_id_fkey FOREIGN KEY ("address_id") REFERENCES "t_address" ("address_id");
ALTER TABLE "t_case_address" ADD CONSTRAINT t_case_address_benefits_case_id_fkey FOREIGN KEY ("benefits_case_id") REFERENCES "cs_benefits_case" ("benefits_case_id");
ALTER TABLE "t_case_contact_info" ADD CONSTRAINT t_case_contact_info_contact_info_id_fkey FOREIGN KEY ("contact_info_id") REFERENCES "t_contact_info" ("contact_info_id");
ALTER TABLE "t_case_contact_info" ADD CONSTRAINT t_case_contact_info_benefits_case_id_fkey FOREIGN KEY ("benefits_case_id") REFERENCES "cs_benefits_case" ("benefits_case_id");
ALTER TABLE "t_individual_address" ADD CONSTRAINT t_individual_address_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "t_individual_address" ADD CONSTRAINT t_individual_address_address_id_fkey FOREIGN KEY ("address_id") REFERENCES "t_address" ("address_id");
ALTER TABLE "t_individual_contact_info" ADD CONSTRAINT t_individual_contact_info_contact_info_id_fkey FOREIGN KEY ("contact_info_id") REFERENCES "t_contact_info" ("contact_info_id");
ALTER TABLE "t_individual_contact_info" ADD CONSTRAINT t_individual_contact_info_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
ALTER TABLE "t_individual_relationship" ADD CONSTRAINT t_individual_relationship_benefits_case_id_fkey FOREIGN KEY ("benefits_case_id") REFERENCES "cs_benefits_case" ("benefits_case_id");
ALTER TABLE "t_individual_relationship" ADD CONSTRAINT t_individual_relationship_individual_id_fkey FOREIGN KEY ("individual_id") REFERENCES "cl_individual" ("individual_id");
